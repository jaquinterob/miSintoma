{"ast":null,"code":"var _jsxFileName = \"C:\\\\RepositoriosGIT\\\\miSintoma\\\\demoFrontJGP\\\\demofrontjgp\\\\src\\\\components\\\\AppMyComponentRest.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Get = () => {\n  _s();\n\n  const EmployeeData = [{\n    id: 1,\n    firsName: \"Juan\",\n    lastName: \"Tania\",\n    email: \"floppydiskette\"\n  }, {\n    id: 2,\n    firsName: \"Perez\",\n    lastName: \"Craig\",\n    email: \"siliconeidolon\"\n  }, {\n    id: 3,\n    firsName: \"guerra\",\n    lastName: \"Ben\",\n    email: \"benisphere\"\n  }];\n  const [employees, setEmployees] = useState(EmployeeData);\n  const [showLoading, setShowLoading] = useState(true);\n  const apiUrl = \"http://localhost:8282/employeeAPI/\";\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(apiUrl + \"employeegetall\");\n      setEmployees(result.data.employeeList);\n    };\n\n    fetchData();\n  }, []);\n\n  const addEmployee = employee => {\n    setShowLoading(true);\n    const data = {\n      id: employee.id,\n      firstName: employee.firstName,\n      lastName: employee.lastName,\n      email: employee.email\n    };\n    axios.post(apiUrl + \"addemployee\", data).then(result => {\n      setEmployees([...employees, result.data]);\n    }).catch(error => setShowLoading(false));\n    /*\r\n    employee.id = employees.length + 1;\r\n    setEmployees([...employees, employee]);\r\n      const data = {\r\n      id: parseInt(employee.id),\r\n      firstName: employee.firstName,\r\n      lastName: employee.lastName,\r\n      email: employee.email,\r\n    };\r\n      axios\r\n      .post(apiUrl, data)\r\n      .then((result) => {\r\n        //props.history.push('/show/' + result.data._id)\r\n        console.log(\"Consumo del Servicio 2\");\r\n        console.log(result);\r\n      })\r\n      .catch((error) => setShowLoading(false));\r\n    */\n  };\n\n  const deleteEmployee = id => {\n    setEmployees(employees.filter(employee => employee.id !== id));\n    const data = {\n      id: id,\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\"\n    };\n    axios.post(apiUrl + \"employeeremove\", data).then(result => {//console.log(result);\n    }).catch(error => setShowLoading(false));\n  };\n\n  const [editing, setEditing] = useState(false);\n  const initialFormState = {\n    id: null,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\"\n  };\n  const [currentEmployee, setCurrentEmployee] = useState(initialFormState);\n\n  const editRow = employee => {\n    setEditing(true);\n    setCurrentEmployee({\n      id: employee.id,\n      firstName: employee.firstName,\n      lastName: employee.lastName,\n      email: employee.email\n    });\n  };\n\n  const updateEmployee = (id, updatedEmployee) => {\n    setEditing(false);\n    setEmployees(employees.map(employee => employee.id === id ? updatedEmployee : employee));\n    const data = {\n      id: updatedEmployee.id,\n      firstName: updatedEmployee.firstName,\n      lastName: updatedEmployee.lastName,\n      email: updatedEmployee.email\n    };\n    axios.post(apiUrl + \"updateemployee\", data).then(result => {//console.log(\"Updated\");\n    }).catch(error => setShowLoading(false));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CRUD App with Hooks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-large\",\n        children: editing ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Edit Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(EditEmployeeForm, {\n            setEditing: setEditing,\n            currentEmployee: currentEmployee,\n            updateEmployee: updateEmployee\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AddEmployeeForm, {\n            addEmployee: addEmployee\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-large\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"View Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EmployeeTable, {\n          employees: employees,\n          deleteEmployee: deleteEmployee,\n          editRow: editRow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Get, \"bxPuDZyr3XhvK53gwG16B7SJ990=\");\n\n_c = Get;\nexport default Employee;\n\nvar _c;\n\n$RefreshReg$(_c, \"Get\");","map":{"version":3,"sources":["C:/RepositoriosGIT/miSintoma/demoFrontJGP/demofrontjgp/src/components/AppMyComponentRest.jsx"],"names":["React","useState","useEffect","axios","Get","EmployeeData","id","firsName","lastName","email","employees","setEmployees","showLoading","setShowLoading","apiUrl","fetchData","result","data","employeeList","addEmployee","employee","firstName","post","then","catch","error","deleteEmployee","filter","editing","setEditing","initialFormState","currentEmployee","setCurrentEmployee","editRow","updateEmployee","updatedEmployee","map","Employee"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Get = () => {\r\n  const EmployeeData = [\r\n    { id: 1, firsName: \"Juan\", lastName: \"Tania\", email: \"floppydiskette\" },\r\n    { id: 2, firsName: \"Perez\", lastName: \"Craig\", email: \"siliconeidolon\" },\r\n    { id: 3, firsName: \"guerra\", lastName: \"Ben\", email: \"benisphere\" },\r\n  ];\r\n  const [employees, setEmployees] = useState(EmployeeData);\r\n  const [showLoading, setShowLoading] = useState(true);\r\n  const apiUrl = \"http://localhost:8282/employeeAPI/\";\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(apiUrl + \"employeegetall\");\r\n      setEmployees(result.data.employeeList);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const addEmployee = (employee) => {\r\n    setShowLoading(true);\r\n    const data = {\r\n      id: employee.id,\r\n      firstName: employee.firstName,\r\n      lastName: employee.lastName,\r\n      email: employee.email,\r\n    };\r\n    axios\r\n      .post(apiUrl + \"addemployee\", data)\r\n      .then((result) => {\r\n        setEmployees([...employees, result.data]);\r\n      })\r\n      .catch((error) => setShowLoading(false));\r\n\r\n    /*\r\n    employee.id = employees.length + 1;\r\n    setEmployees([...employees, employee]);\r\n\r\n    const data = {\r\n      id: parseInt(employee.id),\r\n      firstName: employee.firstName,\r\n      lastName: employee.lastName,\r\n      email: employee.email,\r\n    };\r\n\r\n    axios\r\n      .post(apiUrl, data)\r\n      .then((result) => {\r\n        //props.history.push('/show/' + result.data._id)\r\n        console.log(\"Consumo del Servicio 2\");\r\n        console.log(result);\r\n      })\r\n      .catch((error) => setShowLoading(false));\r\n*/\r\n  };\r\n\r\n  const deleteEmployee = (id) => {\r\n    setEmployees(employees.filter((employee) => employee.id !== id));\r\n    const data = {\r\n      id: id,\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n    };\r\n    axios\r\n      .post(apiUrl + \"employeeremove\", data)\r\n      .then((result) => {\r\n        //console.log(result);\r\n      })\r\n      .catch((error) => setShowLoading(false));\r\n  };\r\n\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const initialFormState = {\r\n    id: null,\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n  };\r\n\r\n  const [currentEmployee, setCurrentEmployee] = useState(initialFormState);\r\n\r\n  const editRow = (employee) => {\r\n    setEditing(true);\r\n    setCurrentEmployee({\r\n      id: employee.id,\r\n      firstName: employee.firstName,\r\n      lastName: employee.lastName,\r\n      email: employee.email,\r\n    });\r\n  };\r\n\r\n  const updateEmployee = (id, updatedEmployee) => {\r\n    setEditing(false);\r\n    setEmployees(\r\n      employees.map((employee) =>\r\n        employee.id === id ? updatedEmployee : employee\r\n      )\r\n    );\r\n    const data = {\r\n      id: updatedEmployee.id,\r\n      firstName: updatedEmployee.firstName,\r\n      lastName: updatedEmployee.lastName,\r\n      email: updatedEmployee.email,\r\n    };\r\n    axios\r\n      .post(apiUrl + \"updateemployee\", data)\r\n      .then((result) => {\r\n        //console.log(\"Updated\");\r\n      })\r\n      .catch((error) => setShowLoading(false));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>CRUD App with Hooks</h1>\r\n      <div className=\"flex-row\">\r\n        <div className=\"flex-large\">\r\n          {editing ? (\r\n            <div>\r\n              <h2>Edit Employee</h2>\r\n              <EditEmployeeForm\r\n                setEditing={setEditing}\r\n                currentEmployee={currentEmployee}\r\n                updateEmployee={updateEmployee}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <h2>Add employee</h2>\r\n              <AddEmployeeForm addEmployee={addEmployee} />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"flex-large\">\r\n          <h2>View Employees</h2>\r\n          <EmployeeTable\r\n            employees={employees}\r\n            deleteEmployee={deleteEmployee}\r\n            editRow={editRow}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Employee;\r\n"]},"metadata":{},"sourceType":"module"}